Create Private Ingress Gateway:

First, dump istio config to yaml file

istioctl profile dump demo > profile_demo_config.yaml

And you will see ingress gateway config section like this

    apiVersion: install.istio.io/v1alpha1
    kind: IstioOperator
    spec:
      addonComponents:
      components: # https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#IstioComponentSetSpec
        ingressGateways: # https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#GatewaySpec
        - enabled: true
          k8s:
            resources:
              requests:
                cpu: 10m
                memory: 40Mi
            service:
              ports:
              - name: status-port
                port: 15020
                targetPort: 15020
              - name: http2
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              - name: tcp
                port: 31400
                targetPort: 31400
              - name: tls
                port: 15443
                targetPort: 15443
          name: istio-ingressgateway


Then you will create overrides.yaml like below that you will pass to helm install

    apiVersion: install.istio.io/v1alpha1
    kind: IstioOperator
    spec:
      profile: demo
      components: # ref: https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/#IstioOperatorSpec
        # sidecarInjector:
        #   enabled: true
        ingressGateways:
        - enabled: true
          name: istio-ingressgateway
          k8s:
            resources:
              requests:
                cpu: 10m
                memory: 40Mi
            service:
              ports:
              - name: status-port
                port: 15020
                targetPort: 15020
              - name: http2
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              - name: tcp
                port: 31400
                targetPort: 31400
              - name: tls
                port: 15443
                targetPort: 15443      
            serviceAnnotations:
              # enable TLS termination at AWS ELB level
              service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:xxxxxx:certificate/xxxxx"
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
              service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
        - enabled: true
          name: istio-private-ingressgateway
          label:
            istio: privateingressgateway # this will be needed as gateway will look for this selector
            app: istio-private-ingressgateway
          k8s:
            resources:
              requests:
                cpu: 10m
                memory: 40Mi
            service:
              ports:
              - name: status-port
                port: 15020
                targetPort: 15020
              - name: http2
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              - name: tcp
                port: 31400
                targetPort: 31400
              - name: tls
                port: 15443
                targetPort: 15443      
            serviceAnnotations:
              # ref: https://medium.com/swlh/public-and-private-istio-ingress-gateways-on-aws-f968783d62fe
              service.beta.kubernetes.io/aws-load-balancer-internal: "true" # make this CLB private. Refs for service annotations for AWS ELB: https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/#aws, https://docs.aws.amazon.com/eks/latest/userguide/load-balancing.html
              # enable TLS termination at AWS ELB level
              service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:xxxxxx:certificate/xxxxx" 
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
              service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
      values:
        gateways: # configure gateways: https://istio.io/latest/docs/setup/install/istioctl/#configure-gateways
          istio-ingressgateway: # for internal ELB
            applicationPorts: ""
            autoscaleEnabled: false
            debug: info
            domain: ""
            env: {}
            meshExpansionPorts:
            - name: tcp-pilot-grpc-tls
              port: 15011
              targetPort: 15011
            - name: tcp-istiod
              port: 15012
              targetPort: 15012
            - name: tcp-citadel-grpc-tls
              port: 8060
              targetPort: 8060
            - name: tcp-dns-tls
              port: 853
              targetPort: 8853
            name: istio-private-ingressgateway
            secretVolumes:
            - mountPath: /etc/istio/ingressgateway-certs
              name: ingressgateway-certs
              secretName: istio-ingressgateway-certs
            - mountPath: /etc/istio/ingressgateway-ca-certs
              name: ingressgateway-ca-certs
              secretName: istio-ingressgateway-ca-certs
            type: LoadBalancer


Then install helm

    istioctl install -f overrides.yaml


Useful refs:

- https://discuss.istio.io/t/istiocontrolplane-api-how-to-create-multiple-ingress-gateways/4830

- https://medium.com/faun/setup-multiple-ingress-gateways-in-istio-52ad0dc7f99d
- https://knative.dev/docs/serving/setting-up-custom-ingress-gateway/